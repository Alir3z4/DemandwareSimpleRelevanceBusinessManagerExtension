/**
* SyncResourcesToSimplerelevance.ds
*
* Export store resources such as `Products`, `Orders`, `Customers`
* to SimpleRelevance by using batch API with `async` enabled on all
* of batch API calls.
*
* @input APIKEY : String SimpleRelevance account API Key
* @input BusinessName : String SimpleRelevance account API business name.
*
*/
importPackage(dw.system);
importPackage(dw.object);
importPackage(dw.customer);
importPackage(dw.catalog);
importPackage(dw.order);

importClass(dw.object.SystemObjectMgr);
importClass(dw.util.List);
importClass(dw.util.Collection);
importClass(dw.util.SeekableIterator);
importClass(dw.net.HTTPClient);
importClass(dw.system.Logger);
importClass(dw.system.Log);

importScript("utils/JsonSerializer.ds");


function execute( args : PipelineDictionary ) : Number
{
	// Constants
	var SimpleRelevanceAPIURL : String = "https://simplerelevance.com/api/v3/";
	var SimpleRelevanceAPIEndPointItems : String = SimpleRelevanceAPIURL + "items/";
	var SimpleRelevanceAPIEndPointUsers : String = SimpleRelevanceAPIURL + "users/";
	var SimpleRelevanceAPIEndPointActions :  String = SimpleRelevanceAPIURL + "actions/";
	// !Constants

	var httpClient : HTTPClient = new HTTPClient();
	var log : Log = Logger.getLogger("SimpleRelevance", 'SimpleRelevanceLogger');
	var jsonSerializerArgs = {};
	
	function logMe(msg : String, logLevel : String) {
		if (logLevel == "debug") {if (log.isDebugEnabled()) {log.debug(msg);}}
		else if (logLevel == "info") {if (log.isInfoEnabled()) {log.info(msg);}}
		else if (logLevel == "error") {if (log.isErrorEnabled()) {log.error(msg);}}
	}


	function batchAPICall(endPoint : String, payload : Array) {
		
		if (payload.length == 0) {
			logMe("Payload for '" + endPoint + "' was empty, API call has been ignored.", 'info');
			return;
		}

		httpClient.open("POST", endPoint, args.APIKEY, args.BusinessName);
		httpClient.setRequestHeader("Content-Type", "application/json");
		httpClient.send(JSON.stringify({'batch': payload}));
		
		if (httpClient.getStatusCode() == 201 || httpClient.getStatusCode() == 200) {
			logMe("Succesfull batch API call to '" + endPoint + "'", 'info');
		} else if (httpClient.getStatusCode() == 403) {
			logMe("API credentials are invalid.", 'error');
			return PIPELET_ERROR;
		} else {
			log.error("Batch API call to '" + endPoint + "' Failed. Error was: " + httpClient.getErrorText(), 'error');
		}
	}

	// Customers
	logMe("Start syncing 'Customers'", 'info');
	
	var customerIt: SeekableIterator = SystemObjectMgr.getAllSystemObjects("Profile");
	var batchItemJson: Object;
	var listData : Array = new Array();
	jsonSerializerArgs = {
		'includeFields': [
			'birthday',
			'creationDate',
			'fax',
			'gender',
			'firstName',
			'lastName',
			'title',
			'male',
			'female',
		]
	}
	
	while (customerIt.hasNext()) {
		var profile : Profile = customerIt.next();
		logMe("Preparing Customer: '" + profile.customerNo + "' to export", 'info');
		
		if (profile.getEmail() == "") {
			logMe("Email attr of Customer: '" + profile.customerNo + "' was empty, Ignored.", "info");
			continue;
		}
		batchItemJson = JsonSerializer.getSimpleObject({
			'email': profile.getEmail(),
			'user_id': profile.getCustomerNo(),
			'async': 1,
		});
		batchItemJson['data_dict'] = JsonSerializer.getSimpleObject(profile, jsonSerializerArgs);
		listData.push(batchItemJson);
	}
	
	logMe("Batch API call for 'Customers'", 'info');
	batchAPICall(SimpleRelevanceAPIEndPointUsers, listData);
	
	customerIt = null;
	// !Customers
	
	
	// Products
	logMe("Start syncing 'Products'", 'info');
	
	var productIt: SeekableIterator = ProductMgr.queryAllSiteProducts();
	var batchItemJson: Object;
	var listData : Array = new Array();
	jsonSerializerArgs = {
		'includeFields': [
			'EAN',
			'ID',
			'brand',
			'creationDate',
			'lastModified',
			'image',
			'longDescription',
			'shortDescription',
			'manufacturerName',
			'manufacturerSKU',
			'name',
			'pageDescription',
			'pageKeywords',
			'pageTitle',
			'pageURL',
			'thumbnail',	
		]
	}
	
	while (productIt.hasNext()) {
		var product : Product = productIt.next();
		logMe("Preparing Product: '" + product.ID + "' to export", 'info');
		
		batchItemJson = JsonSerializer.getSimpleObject({
			"item_name": product.getName(),
			"item_id": product.getID(),
			"item_type": "product",
			'async': 1,
		});
		batchItemJson['data_dict'] = JsonSerializer.getSimpleObject(product, jsonSerializerArgs);
		batchItemJson['variants'] = jsonSerializer.getSimpleObject(product.getVariants());

		listData.push(batchItemJson);
	}

	logMe("Batch API call for 'Products'", 'info');
	batchAPICall(SimpleRelevanceAPIEndPointItems, listData);

	productIt = null;
	// !Products
	
	// Orders
	logMe("Start syncing 'Orders'", 'info');
	
	var orderIt: SeekableIterator = SystemObjectMgr.getAllSystemObjects("Order");
	var batchItemJson: Object;
	var listData : Array = new Array();
	
	while (orderIt.hasNext()) {
		var order : Order = orderIt.next();
		logMe("Preparing Order: '" + order.orderNo + "' to export", 'info');
		
		var itemIt : Iterator = order.productLineItems.iterator();
		
		while (itemIt.hasNext()) {
			var item : Product =  itemIt.next();
			logMe("Preparing Order Item: '" + item.ID + "' to export", 'info');

			batchItemJson = JsonSerializer.getSimpleObject({
				'user_id': order.getCustomerNo(),
				'item_id': item.getID(),
				'price': item.priceModel.getPriceInfo().getPrice().getValue(),
				'action_type': 1,
				'async': 1,
			});
			listData.push(batchItemJson);
		}
	}
	
	logMe("Batch API call for 'Orders'", 'info');
	batchAPICall(SimpleRelevanceAPIEndPointActions, listData);

	logMe("Free!", 'info');
	listData = null;
	orderIt = null;
	// !Orders

	return PIPELET_NEXT;
}
