/**
*
* @input APIKEY : String
* @input BusinessName : String
*
*/
importPackage(dw.system);
importPackage(dw.object);
importPackage(dw.customer);
importPackage(dw.catalog);
importPackage(dw.order);

importClass(dw.object.SystemObjectMgr);
importClass(dw.util.List);
importClass(dw.util.Collection);
importClass(dw.util.SeekableIterator);
importClass(dw.net.HTTPClient);
importClass(dw.system.Logger);
importClass(dw.system.Log);

importScript("json_serializer.ds");


function execute( args : PipelineDictionary ) : Number
{
	// Constants
	var SimpleRelevanceAPIURL : String = "https://simplerelevance.com/api/v3/";
	var SimpleRelevanceAPIEndPointItems : String = SimpleRelevanceAPIURL + "items/";
	var SimpleRelevanceAPIEndPointUsers : String = SimpleRelevanceAPIURL + "users/";
	var SimpleRelevanceAPIEndPointActions :  String = SimpleRelevanceAPIURL + "actions/";
	// !Constants

	var httpClient : HTTPClient = new HTTPClient();
	var log : Log = Logger.getLogger("SimpleRelevance", "log");
	var jsonSerializerArgs = {};
	
	function logMe(msg : String, logLevel : String) {
		if (logLevel == "debug") {if (log.isDebugEnabled()) {log.debug(msg);}}
		else if (logLevel == "info") {if (log.isInfoEnabled()) {log.info(msg);}}
		else if (logLevel == "error") {if (log.isErrorEnabled()) {log.error(msg);}}
	}
	
	function batchAPICall(endPoint : String, payload : Array) {
		
		if (payload.length == 0) {
			logMe("Payload for '" + endPoint + "' was empty, API call has been made.", 'info');
			return;
		}
		
		httpClient.open("POST", endPoint, args.APIKEY, args.BusinessName);
		httpClient.setRequestHeader("Content-Type", "application/json");
		httpClient.send(JSON.stringify({'batch': payload}));
		
		if (httpClient.getStatusCode() == 201 || httpClient.getStatusCode() == 200) {
			logMe("Succesfull batch api call to '" + endPoint + "'", 'info');
		} else {
			log.error("Error in batch api call to '" + endPoint + "' Error was: " + httpClient.getErrorText(), 'error');
		}
	}

	// Customers
	var customerIt: SeekableIterator = SystemObjectMgr.getAllSystemObjects("Profile");
	var batchItemJson: Object;
	var listData : Array = new Array();
	jsonSerializerArgs = {
		'includeFields': [
			'birthday',
			'creationDate',
			'fax',
			'gender',
			'firstName',
			'lastName',
			'title',
			'male',
			'female',
		]
	}
	
	while (customerIt.hasNext()) {
		var customer : Profile = customerIt.next();
		batchItemJson = JsonSerializer.getSimpleObject({
			'email': customer.email,
			'user_id': customer.customerNo,
		});
		batchItemJson['data_dict'] = JsonSerializer.getSimpleObject(profile, jsonSerializerArgs);
		listData.push(batchItemJson);
	}
	
	batchAPICall(SimpleRelevanceAPIEndPointUsers, listData);
	
	customerIt = null;
	// !Customers
	
	
	// Products
	var productIt: SeekableIterator = ProductMgr.queryAllSiteProducts();
	var batchItemJson: Object;
	var listData : Array = new Array();
	jsonSerializerArgs = {
		'includeFields': [
			'EAN',
			'ID',
			'brand',
			'creationDate',
			'lastModified',
			'image',
			'longDescription',
			'shortDescription',
			'manufacturerName',
			'manufacturerSKU',
			'name',
			'pageDescription',
			'pageKeywords',
			'pageTitle',
			'pageURL',
			'thumbnail',	
		]
	}
	
	while (productIt.hasNext()) {
		var product : Product = productIt.next();
		batchItemJson = JsonSerializer.getSimpleObject({
			"item_name": product.name,
			"item_id": product.ID,
			"item_type": "product",
		});
		batchItemJson['data_dict'] = JsonSerializer.getSimpleObject(product, jsonSerializerArgs);
		listData.push(batchItemJson);
	}

	batchAPICall(SimpleRelevanceAPIEndPointItems, listData);

	productIt = null;
	// !Products
	
	// Orders
	var orderIt: SeekableIterator = SystemObjectMgr.getAllSystemObjects("Order");
	var batchItemJson: Object;
	var listData : Array = new Array();
	
	while (orderIt.hasNext()) {
		var order : Order = orderIt.next();
		var itemIt : Iterator = order.productLineItems.iterator();
		
		while (itemIt.hasNext()) {
			var item : Product =  itemIt.next();
			batchItemJson = JsonSerializer.getSimpleObject({
				'user_id': order.customerNo,
				'item_id': item.ID,
				'price': item.priceModel.getPriceInfo().price.toString(),
				'action_type': 1,
			});
			listData.push(batchItemJson);
		}
	}
	
	batchAPICall(SimpleRelevanceAPIEndPointActions, listData);

	listData = null;
	orderIt = null;
	// !Orders

	return PIPELET_NEXT;
}
